import Vue = require('vue');
import { PropOptions } from 'vue';
import VueClassComponent from 'vue-class-component';
import 'reflect-metadata';
export declare type Constructor = {
    new (...args: any[]): any;
};
/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
export declare function Prop(target: Vue, key: string): void;
export declare function Prop(target?: (PropOptions | Constructor[])): PropertyDecorator;
/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
export declare function Watch(path: string, options?: Vue.WatchOptions): MethodDecorator;
export declare const prop: typeof Prop;
export declare const watch: typeof Watch;
export declare const Component: typeof VueClassComponent;
